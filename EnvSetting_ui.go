// THIS FILE WAS GENERATED BY A TOOL, DO NOT EDIT!

package main

import (
	"github.com/lxn/walk"
)

type envSettingDialogUI struct {
	groupBox        *walk.GroupBox
	usrEnvTableView *walk.TableView
	frame           *walk.Composite
	newUserEnvBtn   *walk.PushButton
	delUsrEnvBtn    *walk.PushButton
	editUsrEnvBtn   *walk.PushButton
	groupBox_2      *walk.GroupBox
	sysEnvTableView *walk.TableView
	frame_2         *walk.Composite
	newSysEnvBtn    *walk.PushButton
	delSysEnvBtn    *walk.PushButton
	editSysEnvBtn   *walk.PushButton
	frame_3         *walk.Composite
	okBtn           *walk.PushButton
	cancelBtn       *walk.PushButton
}

func (w *EnvSettingDialog) init(owner walk.RootWidget) (err error) {
	if w.Dialog, err = walk.NewDialog(owner); err != nil {
		return err
	}

	succeeded := false
	defer func() {
		if !succeeded {
			w.Dispose()
		}
	}()

	var font *walk.Font
	if font == nil {
		font = nil
	}

	w.SetName("EnvSettingDialog")
	if err := w.SetClientSize(walk.Size{481, 490}); err != nil {
		return err
	}
	if err := w.SetTitle(`Dialog`); err != nil {
		return err
	}
	if err := w.SetMinMaxSize(walk.Size{0, 0}, walk.Size{16777215, 2000}); err != nil {
		return err
	}
	verticalLayout := walk.NewVBoxLayout()
	if err := w.SetLayout(verticalLayout); err != nil {
		return err
	}
	if err := verticalLayout.SetMargins(walk.Margins{9, 9, 9, 9}); err != nil {
		return err
	}
	if err := verticalLayout.SetSpacing(6); err != nil {
		return err
	}

	// groupBox
	if w.ui.groupBox, err = walk.NewGroupBox(w); err != nil {
		return err
	}
	w.ui.groupBox.SetName("groupBox")
	if err := w.ui.groupBox.SetTitle(`User Env`); err != nil {
		return err
	}
	verticalLayout_2 := walk.NewVBoxLayout()
	if err := w.ui.groupBox.SetLayout(verticalLayout_2); err != nil {
		return err
	}
	if err := verticalLayout_2.SetMargins(walk.Margins{9, 9, 9, 9}); err != nil {
		return err
	}
	if err := verticalLayout_2.SetSpacing(6); err != nil {
		return err
	}

	// usrEnvTableView
	if w.ui.usrEnvTableView, err = walk.NewTableView(w.ui.groupBox); err != nil {
		return err
	}
	w.ui.usrEnvTableView.SetName("usrEnvTableView")

	// frame
	if w.ui.frame, err = walk.NewComposite(w.ui.groupBox); err != nil {
		return err
	}
	w.ui.frame.SetName("frame")
	horizontalLayout := walk.NewHBoxLayout()
	if err := w.ui.frame.SetLayout(horizontalLayout); err != nil {
		return err
	}
	if err := horizontalLayout.SetMargins(walk.Margins{9, 9, 9, 9}); err != nil {
		return err
	}
	if err := horizontalLayout.SetSpacing(6); err != nil {
		return err
	}

	// anonymous spacer
	if _, err := walk.NewHSpacer(w.ui.frame); err != nil {
		return err
	}

	// newUserEnvBtn
	if w.ui.newUserEnvBtn, err = walk.NewPushButton(w.ui.frame); err != nil {
		return err
	}
	w.ui.newUserEnvBtn.SetName("newUserEnvBtn")
	if err := w.ui.newUserEnvBtn.SetText(`New`); err != nil {
		return err
	}

	// delUsrEnvBtn
	if w.ui.delUsrEnvBtn, err = walk.NewPushButton(w.ui.frame); err != nil {
		return err
	}
	w.ui.delUsrEnvBtn.SetName("delUsrEnvBtn")
	if err := w.ui.delUsrEnvBtn.SetText(`Delete`); err != nil {
		return err
	}

	// editUsrEnvBtn
	if w.ui.editUsrEnvBtn, err = walk.NewPushButton(w.ui.frame); err != nil {
		return err
	}
	w.ui.editUsrEnvBtn.SetName("editUsrEnvBtn")
	if err := w.ui.editUsrEnvBtn.SetText(`Edit`); err != nil {
		return err
	}

	// groupBox_2
	if w.ui.groupBox_2, err = walk.NewGroupBox(w); err != nil {
		return err
	}
	w.ui.groupBox_2.SetName("groupBox_2")
	if err := w.ui.groupBox_2.SetTitle(`System Env`); err != nil {
		return err
	}
	verticalLayout_3 := walk.NewVBoxLayout()
	if err := w.ui.groupBox_2.SetLayout(verticalLayout_3); err != nil {
		return err
	}
	if err := verticalLayout_3.SetMargins(walk.Margins{9, 9, 9, 9}); err != nil {
		return err
	}
	if err := verticalLayout_3.SetSpacing(6); err != nil {
		return err
	}

	// sysEnvTableView
	if w.ui.sysEnvTableView, err = walk.NewTableView(w.ui.groupBox_2); err != nil {
		return err
	}
	w.ui.sysEnvTableView.SetName("sysEnvTableView")

	// frame_2
	if w.ui.frame_2, err = walk.NewComposite(w.ui.groupBox_2); err != nil {
		return err
	}
	w.ui.frame_2.SetName("frame_2")
	horizontalLayout_2 := walk.NewHBoxLayout()
	if err := w.ui.frame_2.SetLayout(horizontalLayout_2); err != nil {
		return err
	}
	if err := horizontalLayout_2.SetMargins(walk.Margins{9, 9, 9, 9}); err != nil {
		return err
	}
	if err := horizontalLayout_2.SetSpacing(6); err != nil {
		return err
	}

	// anonymous spacer
	if _, err := walk.NewHSpacer(w.ui.frame_2); err != nil {
		return err
	}

	// newSysEnvBtn
	if w.ui.newSysEnvBtn, err = walk.NewPushButton(w.ui.frame_2); err != nil {
		return err
	}
	w.ui.newSysEnvBtn.SetName("newSysEnvBtn")
	if err := w.ui.newSysEnvBtn.SetText(`New`); err != nil {
		return err
	}

	// delSysEnvBtn
	if w.ui.delSysEnvBtn, err = walk.NewPushButton(w.ui.frame_2); err != nil {
		return err
	}
	w.ui.delSysEnvBtn.SetName("delSysEnvBtn")
	if err := w.ui.delSysEnvBtn.SetText(`Delete`); err != nil {
		return err
	}

	// editSysEnvBtn
	if w.ui.editSysEnvBtn, err = walk.NewPushButton(w.ui.frame_2); err != nil {
		return err
	}
	w.ui.editSysEnvBtn.SetName("editSysEnvBtn")
	if err := w.ui.editSysEnvBtn.SetText(`Edit`); err != nil {
		return err
	}

	// frame_3
	if w.ui.frame_3, err = walk.NewComposite(w); err != nil {
		return err
	}
	w.ui.frame_3.SetName("frame_3")
	horizontalLayout_3 := walk.NewHBoxLayout()
	if err := w.ui.frame_3.SetLayout(horizontalLayout_3); err != nil {
		return err
	}
	if err := horizontalLayout_3.SetMargins(walk.Margins{9, 9, 9, 9}); err != nil {
		return err
	}
	if err := horizontalLayout_3.SetSpacing(6); err != nil {
		return err
	}

	// anonymous spacer
	if _, err := walk.NewHSpacer(w.ui.frame_3); err != nil {
		return err
	}

	// okBtn
	if w.ui.okBtn, err = walk.NewPushButton(w.ui.frame_3); err != nil {
		return err
	}
	w.ui.okBtn.SetName("okBtn")
	if err := w.ui.okBtn.SetText(`OK`); err != nil {
		return err
	}

	// cancelBtn
	if w.ui.cancelBtn, err = walk.NewPushButton(w.ui.frame_3); err != nil {
		return err
	}
	w.ui.cancelBtn.SetName("cancelBtn")
	if err := w.ui.cancelBtn.SetText(`Cancel`); err != nil {
		return err
	}

	// Tab order

	succeeded = true

	return nil
}
